<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/webflow
        http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd">

	<persistence-context />
	
	<on-start>
		<set name="flowScope.usuarioAtual" value="applicationController.usuarioAtivo"/>
	</on-start>
	
	<view-state id="cursoList">
		<on-render>
			<evaluate expression="cursoController.getCursos()" result="viewScope.cursos" result-type="dataModel" />
		</on-render>
	
		<transition on="buscar">
			<evaluate expression="cursoController.getCursos()" result="viewScope.cursos" result-type="dataModel" />
		</transition>
		<transition on="novo" to="cursoEdit">
			<evaluate expression="cursoController.novo()" result="flowScope.curso" />
		</transition>
		<transition on="editar" to="cursoEdit">
			<set name="flowScope.curso" value="cursos.selectedRow" />
		</transition>
		<transition on="matricular">
			<evaluate expression="usuarioController.matricular(usuarioAtual, cursos.selectedRow)" />
		</transition>
		<transition on="visualizar" to="cursoShow">
			<set name="flowScope.curso" value="cursos.selectedRow" />
		</transition>
	</view-state>

	<view-state id="cursoEdit">
		<transition on="salvar" to="ok">
			<evaluate expression="cursoFacade.save(curso)" />
		</transition>
		<transition on="cancelar" to="cancel" />
	</view-state>
	
	<view-state id="cursoShow">
		<transition on="matricular">
			<evaluate expression="usuarioController.matricular(usuarioAtual, curso)" />
		</transition>
		<transition on="desmatricular">
			<evaluate expression="usuarioController.desmatricular(usuarioAtual, curso)" />
		</transition>
		<transition on="cancelar" to="cancel" />
	</view-state>
	<!-- 
	<subflow-state id="disciplinaList" subflow="disciplina/list">
		<input name="mode" value="'embedded'" />
		<input name="popup" value="true" />
		<transition on="ok" to="cursoEdit">
			<evaluate expression="curso.disciplinas.add(disciplina)" />
		</transition>
		<transition on="cancel" to="cursoEdit" />
	</subflow-state>
  -->
	<end-state id="ok" commit="true" />
	<end-state id="cancel" />
</flow>